% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/circular_silhouette.R
\name{circular.sil}
\alias{circular.sil}
\title{Calculating Silhouette on Circular Data Clusters}
\usage{
circular.sil(O, cluster, Circumference, method = c("linear", "quadratic"))
}
\arguments{
\item{O}{a numeric vector of circular data points}

\item{cluster}{an integer vector of cluster labels for each point}

\item{Circumference}{a numeric value giving the circumference of the
circle}

\item{method}{a character value to specify the algorithm to calculate
the silhouette information. The default value is \code{"linear"},
indicating a fast linear time algorithm for calculating circular
silhouette. The option of \code{"quadratic"} is provided for
testing and comparison, not meant for production use.}
}
\value{
The function returns a numeric value of the average
 silhouette information calculated on the input circular data
 clusters.
}
\description{
A fast linear-time algorithm to calculate silhouette information on
circular data with cluster labels.
}
\details{
If \code{method} takes the value of \code{"linear"}
 (default), the
 silhouette information on circular data is calculated by a fast
 linear-time algorithm; if \code{method} is \code{"quadratic"},
 a quadratic-time algorithm is used instead to calculate silhouette
 by definition. There is an overhead of sorting \eqn{O(n \log n)}{O(n log n)} if the
 input data are not sorted.

One important assumption is that a cluster cannot be contained in
another cluster in the input cluster labels.
}
\examples{
O <- c(-1.2, -2, -3, -2.5, 1, 0.8, 1.5, 1.2)
cluster <- c(1, 1, 1, 1, 2, 2, 2, 2)
circular.sil(O, cluster, 3)

}
